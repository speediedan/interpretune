[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "interpretune"
authors = [
    {name = "Dan Dale", email = "danny.dale@gmail.com"},
]
description = "A package to support LLM reasoning and interpretability experiments at a level of abstraction that is both powerfully flexible and convenient"
readme = "README.md"
requires-python = ">=3.10"
keywords = ["llm", "reasoning", "interpretability", "fine-tuning", "finetuning"]
license = {text = "BSD-3-Clause"}
dynamic = ["version"]

classifiers = [
            "Environment :: Console",
            "Natural Language :: English",
            "Development Status :: 5 - Production/Stable",
            "Intended Audience :: Developers",
            "Topic :: Scientific/Engineering :: Artificial Intelligence",
            "Topic :: Scientific/Engineering :: Image Recognition",
            "Topic :: Scientific/Engineering :: Information Analysis",
            "License :: OSI Approved :: Apache Software License",
            "Operating System :: OS Independent",
            "Programming Language :: Python :: 3",
            "Programming Language :: Python :: 3.10",
            "Programming Language :: Python :: 3.11",
]

dependencies = [
    "transformer_lens",
    "torch >= 2.0.0",
    # "finetuning-scheduler[possible_future_it_plugin] >= 2.1.0",

]

[project.optional-dependencies]

lightning = [
    #"finetuning-scheduler @ git+https://github.com/speediedan/finetuning-scheduler.git@4fe135a132e75575d0271d7b4e095c8f8da985cb",
    "finetuning-scheduler[examples, cli, extra] >= 2.1.0",
    "bitsandbytes",
    "peft",
]

examples = [
"wandb",
"torch-tb-profiler",
"ipython[notebook]",
"jupytext >= 1.10",  # converting notebook source .py to .ipynb
"nbval >= 0.9.6",  # testing the notebook
"python-dotenv",
"plotly",
"gdown",
"evaluate",
"scikit-learn",
"circuitsvis",
#"circuitsvis @ git+https://github.com/callummcdougall/CircuitsVis.git#subdirectory=python"
]

docs = [
"sphinx >=4.0,<5.0 ",
"myst-parser == 0.18.1",
"nbsphinx >= 0.8.5",
"pandoc >= 1.0",
"docutils >= 0.16",
"sphinxcontrib-fulltoc >= 1.0",
"sphinxcontrib-mockautodoc",
"sphinx-autodoc-typehints >= 1.16",
"sphinx-paramlinks >= 0.5.1",
"sphinx-togglebutton >= 0.2",
"sphinx-copybutton >= 0.3",
"typing-extensions",  # already in `base.txt` but the docs CI job does not install it
"jinja2 >= 3.0.0,<3.1.0",
"pt_lightning_sphinx_theme @ git+https://github.com/speediedan/lightning_sphinx_theme.git@057f4c3e669948bc618eec1688b016f07140cc0d",
]

test = [
"coverage >= 6.4",
"pytest >= 6.0",
"pytest-rerunfailures >= 10.2",
"twine == 3.2",
"mypy >= 0.920",
"pre-commit >= 1.0",
]


[tool.setuptools.dynamic]
version = {attr = "interpretune.__about__.__version__"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
#"it_examples.config.core.experiments" = ["*.yaml"]
#"it_examples.config.core.ft_schedules" = ["*.yaml"]
#"it_examples.config.core.shared" = ["*.yaml"]
#"it_examples.config.lightning.experiments" = ["*.yaml"]
#"it_examples.config.lightning.ft_schedules" = ["*.yaml"]
#"it_examples.config.lightning.shared" = ["*.yaml"]
"*" = ["*.yaml"]

[tool.ruff]
line-length = 120
# Enable Pyflakes `E` and `F` codes by default.
select = [
    "E", "W",  # see: https://pypi.org/project/pycodestyle
    "F",  # see: https://pypi.org/project/pyflakes
]
ignore = [
    "E731", # Do not assign a lambda expression, use a def
]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    "docs",
    ".tox",
    "*.egg",
    "build",
    "temp",
]
ignore-init-module-imports = true
output-format = "pylint"  # `format` was deprecated to prepare for upcoming ruff release, using `output-format` instead.


[tool.ruff.per-file-ignores]
#"src/fts_examples/stable/ipynb_src/fts_superglue_nb.py" = ["E501","F401","F821"]
#"src/fts_examples/legacy/ipynb_src/fts_superglue_nb.py" = ["E501","F401","F821"]

[tool.ruff.isort]
known-first-party = ["docs", "interpretune","tests"]
force-sort-within-sections = false
order-by-type = false

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.mypy]
#files = ["src/interpretune"]  # only include one file while doing major refactor to reduce noise
files = ["src/interpretune/run_experiment.py"]
disallow_untyped_defs = "True"
ignore_missing_imports = "True"
show_error_codes = "True"
warn_redundant_casts = "True"
warn_unused_configs = "True"
warn_unused_ignores = "False"
allow_redefinition = "True"
# disable this rule as the PL Trainer attributes are defined in the connectors, not in its __init__
disable_error_code = "attr-defined"
# style choices
warn_no_return = "False"
exclude = ['tests/.*']

# Ignore mypy errors for these files
# TODO: the goal is for this to be empty
#[[tool.mypy.overrides]]
# the list can be generated with:
# mypy | tr ':' ' ' |  awk '{print $1}' | sort | uniq | sed 's/\.py//g' | sed 's|\/|\.|g' | xargs -I {} echo '"{}",'
# module = []
# ignore_errors = "True"


[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "warnings",
    "pass",
    "rank_zero_warn",
    "raise NotImplementedError",
    "except Exception"
]

[tool.pytest.ini_options]
pythonpath = "tests"
norecursedirs = [
    ".git",
    ".github",
    "dist",
    "build",
    "docs",
]
#addopts = "--strict-markers --doctest-modules --color=yes --disable-pytest-warnings --ignore-glob='src/fts_examples/*/ipynb_src/*.py' --ignore='.actions/assistant.py'"
addopts = "--strict-markers --doctest-modules --color=yes --disable-pytest-warnings"
junit_duration_report = "call"


[tool.jupytext]
notebook_metadata_filter = "-all"

[tool.jupytext.formats]
"notebooks/" = "ipynb"
"scripts/" = "py"
