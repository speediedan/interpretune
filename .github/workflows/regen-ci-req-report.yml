name: regen-ci-req-report (report-only)

on:
  workflow_dispatch:
  push:
    branches: [main, "release/*", "bugfix/*", "feature/*"]
    paths:
      - "setup.*"
      - "requirements.txt"
      - "pyproject.toml"
      - ".codecov.yml"
      - "tests/**"
      - "src/**"
      - "requirements/**"
      - ".github/workflows/ci_test-full.yml"
      - ".actions/**"
      # Exclude documentation-only files from triggering
      - "!docs/**"
      - "!**/*.md"
      - "!**/*.rst"
      - "!mkdocs.yml"
      - "!**/CHANGELOG.md"
      - "!**/CODE_OF_CONDUCT.md"
      - "!**/CONTRIBUTING.md"
      - "!**/LICENSE*"
  pull_request:
    branches: [main, "release/*", "bugfix/*", "feature/*"]
    types: [opened, reopened, ready_for_review, synchronize]
    paths:
      - "setup.*"
      - "requirements.txt"
      - "pyproject.toml"
      - ".codecov.yml"
      - "tests/**"
      - "src/**"
      - "requirements/**"
      - ".github/workflows/ci_test-full.yml"
      - ".actions/**"
      # Exclude documentation-only files from triggering
      - "!docs/**"
      - "!**/*.md"
      - "!**/*.rst"
      - "!mkdocs.yml"
      - "!**/CHANGELOG.md"
      - "!**/CODE_OF_CONDUCT.md"
      - "!**/CONTRIBUTING.md"
      - "!**/LICENSE*"

jobs:
  report:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install regen deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install pip-tools toml

      - name: Run regen (pip-compile)
        run: |
          # Run regen to generate the CI input and post-upgrade files
          python requirements/regen_reqfiles.py --mode pip-compile --ci-output-dir=requirements/ci

      - name: Check for diffs and write patch
        id: diffs
        run: |
          set -euo pipefail
          # create a patch into a file if anything differs; do not treat 'diff' non-zero as an error
          git --no-pager diff --exit-code requirements/ci/requirements.txt requirements/post_upgrades.txt requirements/platform_dependent.txt > regen_diff.patch || true
          if [ -s regen_diff.patch ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Patch size: $(wc -c < regen_diff.patch) bytes"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No changes"
          fi

      - name: Upload regen diff (if present)
        if: steps.diffs.outputs.changed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: regen-pins-diff
          path: regen_diff.patch

      - name: Create or update PR comment (single-comment)
        if: ${{ github.event_name == 'pull_request' && steps.diffs.outputs.changed == 'true' && github.event.pull_request.head.repo.full_name == github.repository }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request.number;
            const marker = '<!-- regen-check-pins -->';
            const bodyText = `${marker}\n**regen-check** detected changes to pinned requirements and uploaded a patch artifact named 'regen-pins-diff'.\n\nPlease review the artifact and CI results. This workflow is report-only and will not open a PR; the scheduled regen workflow will open PRs automatically.`;
            try {
              // list comments and try to find an existing one with the marker (use github.rest)
              const { data: comments } = await github.rest.issues.listComments({ owner: context.repo.owner, repo: context.repo.repo, issue_number: pr });
              const existing = comments.find(c => c.body && c.body.includes(marker));
              if (existing) {
                await github.rest.issues.updateComment({ owner: context.repo.owner, repo: context.repo.repo, comment_id: existing.id, body: bodyText });
              } else {
                await github.rest.issues.createComment({ owner: context.repo.owner, repo: context.repo.repo, issue_number: pr, body: bodyText });
              }
            } catch (err) {
              // If commenting fails (e.g., fork PRs or limited permissions), log the error but don't fail the workflow
              core = require('@actions/core');
              core.warning(`Failed to create/update PR comment: ${err.message}`);
              console.log(err);
            }

      - name: Log summary
        run: |
          if [ "${{ steps.diffs.outputs.changed }}" = "true" ]; then
            echo "Regen-check detected changes to pinned requirements. A patch artifact was uploaded as 'regen-pins-diff'."
            echo "This workflow is report-only and will not open a PR; the scheduled regen workflow will open PRs automatically."
          else
            echo "Regen-check found no pin changes."
          fi
